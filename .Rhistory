rm(list = ls());cat("\014")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
library(dplyr)
library(lattice)
library(ggplot2)
library(caret)
library(e1071)
library(clusterSim)
library(class)
#---------------------------------------------------------------------------
######################## Parte 1 ###########################################
#---------------------------------------------------------------------------
# Paso 1: Utilice la funciÃ³n read.csv para leer el contenido del fichero "movie_metadata.csv"
#     AdemÃ¡s, elimine las siguientes columnas: "director_name", "actor_2_name", "actor_1_name"
#     "movie_title", "plot_keywords", "movie_imdb_link"
# ** Puede automatizar el proceso si intenta eliminar todas las columnas que sean de
#    tipo factor, y que ademÃ¡s, tengan mÃ¡s de 100 niveles diferentes
datos = read.csv("datos/movie_metadata.csv")
datos = dplyr::select(datos, -director_name, -actor_2_name, -actor_1_name, -movie_title, -plot_keywords, -movie_imdb_link)
# Paso 2: Discretice la columna imbd_score para tener rangos en [0, 7.5) [7.5, 9) y [9, 10]
datos$imdb_score = discretize(datos$imdb_score, "fixed", breaks = c(0,7.5,9,10))
# Paso 3: QuÃ©date Ãºnicamente con las filas que tienen todos los datos (no tienen NAs)
datos = na.omit(datos)
library(dplyr)
library(lattice)
library(ggplot2)
library(caret)
library(e1071)
library(clusterSim)
library(class)
#---------------------------------------------------------------------------
######################## Parte 1 ###########################################
#---------------------------------------------------------------------------
# Paso 1: Utilice la funciÃ³n read.csv para leer el contenido del fichero "movie_metadata.csv"
#     AdemÃ¡s, elimine las siguientes columnas: "director_name", "actor_2_name", "actor_1_name"
#     "movie_title", "plot_keywords", "movie_imdb_link"
# ** Puede automatizar el proceso si intenta eliminar todas las columnas que sean de
#    tipo factor, y que ademÃ¡s, tengan mÃ¡s de 100 niveles diferentes
datos = read.csv("datos/movie_metadata.csv")
datos = dplyr::select(datos, -director_name, -actor_2_name, -actor_1_name, -movie_title, -plot_keywords, -movie_imdb_link)
# Paso 2: Discretice la columna imbd_score para tener rangos en [0, 7.5) [7.5, 9) y [9, 10]
datos$imdb_score = discretize(datos$imdb_score, "fixed", breaks = c(0,7.5,9,10))
# (incluya aquÃ­ cualquier librerÃ­a a utilizar)
install.packages("caret", dependencies = TRUE)
install.packages("caret", dependencies = TRUE)
install.packages("manipulateWidget", dependencies = TRUE)
install.packages("R2HTML")
library(dplyr)
library(lattice)
library(ggplot2)
library(caret)
library(e1071)
library(clusterSim)
library(class)
#---------------------------------------------------------------------------
######################## Parte 1 ###########################################
#---------------------------------------------------------------------------
# Paso 1: Utilice la funciÃ³n read.csv para leer el contenido del fichero "movie_metadata.csv"
#     AdemÃ¡s, elimine las siguientes columnas: "director_name", "actor_2_name", "actor_1_name"
#     "movie_title", "plot_keywords", "movie_imdb_link"
# ** Puede automatizar el proceso si intenta eliminar todas las columnas que sean de
#    tipo factor, y que ademÃ¡s, tengan mÃ¡s de 100 niveles diferentes
datos = read.csv("datos/movie_metadata.csv")
datos = dplyr::select(datos, -director_name, -actor_2_name, -actor_1_name, -movie_title, -plot_keywords, -movie_imdb_link)
# Paso 2: Discretice la columna imbd_score para tener rangos en [0, 7.5) [7.5, 9) y [9, 10]
datos$imdb_score = discretize(datos$imdb_score, "fixed", breaks = c(0,7.5,9,10))
